name: Check PR Katacoda Syntax

on:
  pull_request_target:
    branches: [ main ]
jobs:
  setup-matrix:
    runs-on: ubuntu-latest
    env:
      PR_NUMBER: ${{github.event.number}}
      
    steps:
      - name: Checkout playbooks
        uses: actions/checkout@v2
      - name: Install node environment
        uses: actions/setup-node@v2-beta
      - name: npm install
        run: npm install
      - name: Select Changed Files
        id: changedfiles
        run: |
          node selectChangedFiles.js
      - name: Setup matrix combinations
        id: setup-matrix-combinations
        run: |
          dirs=()
          for changed_file in ${{ steps.changedfiles.outputs.changedFiles }}; do
            dir="$(echo $changed_file | cut -d/ -f1)"
            if [[ ! " ${dirs[@]} " =~ " ${dir} " ]]; then
              MATRIX_PARAMS_COMBINATIONS=$MATRIX_PARAMS_COMBINATIONS'{"tutorial": "'$dir'"},'
            fi
            dirs+=($dir)
          done
          echo ::set-output name=matrix-combinations::{\"include\":[$MATRIX_PARAMS_COMBINATIONS]}
    outputs:
      matrix-combinations: ${{ steps.setup-matrix-combinations.outputs.matrix-combinations }}

  build:
    runs-on: ubuntu-latest
    needs: setup-matrix
    strategy:
      matrix: ${{ fromJson(needs.setup-matrix.outputs.matrix-combinations) }}
    steps:
      - name: Checkout tutorial-compiler
        uses: actions/checkout@v2
        with:
          repository: devonfw-tutorials/tutorial-compiler
      
      - name: Checkout playbooks
        uses: actions/checkout@v2
        with:
          repository: devonfw-tutorials/tutorials
          path: playbooks
      
      - uses: actions/setup-node@v2-beta
      
      - name: install TS
        run: npm install typescript
      
      - name: npm install
        run: npm install

      - name: run buildRun.sh --user ${{ github.actor }} --branch ${{ github.event.pull_request_target.head.ref }} --checkSyntax
        run: |
          sh buildRun.sh --user ${{ github.actor }} --branch ${{ github.event.pull_request_target.head.ref }} --checkSyntax -p ${{ matrix.tutorial }} -e test_console
      
      - name: Check error file existence
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: "./build/errors/syntaxErrors.md"
          
      - name: Get message
        id: get_message
        if: steps.check_files.outputs.files_exists == 'true'
        run: |
          message=`cat ./build/errors/syntaxErrors.md`
          message="${message//'%'/'%25'}"
          message="${message//$'\n'/'%0A'}"
          message="${message//$'\r'/'%0D'}"
          echo "${message}"
          echo "::set-output name=message::$message"

      - name: Request changes
        if:  ${{ steps.get_message.outputs.message != '' }}
        uses: andrewmusgrave/automatic-pull-request-review@0.0.2
        with:
          repo-token: '${{ secrets.GITHUB_TOKEN }}'
          event: COMMENT
          body: ${{ steps.get_message.outputs.message }}