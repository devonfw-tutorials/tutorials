= Understanding the architecture principles followed by devon4ng
====
## Prerequisites

Basic Angular knowledge

## Learning goals

This tutorial aims to explain concepts and principles of devon4ng architecture by refering an Angular application template. Below are the steps we will go through to understand it clearly.

* Understand Angular architectural terminology (components and modules)
* Different layers of an Angular application
* Clone and understand devon4ng application structure 

By end of this tutorial you will have detailed understanding of principles followed by devon4ng application as well as its structure and architecture. 

====

[step]
--
restoreDevonfwIde(["npm", "ng", "vscode"])
--

[step]
--
nextKatacodaStep("Overview", [{ "file": "files/overview.md" }])
--

[step]
--
nextKatacodaStep("Architectural Layers", [{ "image": "images/architecture-layers.png" }, { "file": "files/layers.md" }])
--

[step]
--
nextKatacodaStep("Modules", [{ "image": "images/architecture-modules.png" }, { "file": "files/modules.md" }])
--

devon4ng-application-template is a simple application containing a home page (with some dummy text) and a data page (with some CRUD operations). After cloning you can checkout the file structure and understand the concepts explained earlier.
[step]
== Cloning the reference application
--
cloneRepository("", "https://github.com/devonfw/devon4ng-application-template.git")
--

[step]
--
nextKatacodaStep("Core module and Shared module", [{ "file": "files/core-shared-modules.md" }])
--

====
Conclusion

To conclude, in this tutorial you learned 
* the concepts of modules and components
* the layers of the architecture - components and services
* the different types of modules - core, shared and feature

Then we referred a devon4ng application by cloning it and traversing through its files. You can study in more detail about Angular architecture by following [this document](https://devonfw.com/website/pages/docs/master-devon4ng.asciidoc_architecture.html#meta-architecture.asciidoc_devonfw-reference-client-architecture).
====