= Generate Angular Client with devonfw
== Angular client generation with CobiGen
====
With the CobiGen code generator you can easily generate components for your Angular application.
The following tutorial provides an example for using the CobiGen cli.
You can find more information on https://github.com/devonfw/cobigen/wiki/howto_angular-client-generation
## Prerequisites
* devonfw Ide

## Learning goals.
Here in this tutorial we will learn the following:
* Create java project
* CobiGen to generate the Angular source code out of the java files

====

[step]
--
restoreDevonfwIde(["java", "mvn", "vscode"])
--

For this tutorial an installation of the devonfw IDE is required, which was already set up for you. The next step is to install the CobiGen CLI.
[step]
--
installCobiGen()
--

CobiGen uses the backend classes for generating your code used in the Angular application. So in the next steps you will create a java project, create a simple java class.
[step]
--
createDevon4jProject("cobigenjavaexample")
--

====
[step]
== Build the java project
--
buildJava("cobigenjavaexample")
--
====
====
CobiGen is integrated via plugin in the VS Code IDE. We will use it to generate code from one single java class based on existing templates.
[step]
--

createFile("cobigenjavaexample/core/src/main/java/com/example/application/cobigenjavaexample/customermanagement/dataaccess/api/CustomerEntity.java", "files/CustomerEntity.java")
adaptTemplatesCobiGen()
cobiGenJava("cobigenjavaexample/core/src/main/java/com/example/application/cobigenjavaexample/customermanagement/dataaccess/api/CustomerEntity.java",[5])
--
The CobiGen code generator will generate some java classes for you. These contain code for Transfer object, REST service handling and data access and so on.

For example, the following files are generated by CobiGen when using the specified templates:

(5) TO's: Generates the related Transfer Objects.
- `devonfw/workspaces/main/cobigenjavaexample/api/src/main/java/com/example/application/cobigenjavaexample/customermanagement/logic/api/to/CustomerEto.java`{{open}}
- `devonfw/workspaces/main/cobigenjavaexample/api/src/main/java/com/example/application/cobigenjavaexample/customermanagement/logic/api/to/CustomerSearchCriteriaTo.java`{{open}}

====
====
Now you can go through api module of your java project and use Cobigen again to generate your client.
[step]
== Running CobiGen to generate to your Angular code
--
cobiGenJava("cobigenjavaexample/api/src/main/java/com/example/application/cobigenjavaexample/customermanagement/logic/api/to/CustomerEto.java",[1])
--
your Angular client will be generated inside your devon4ng-application-template/src folder.
====
====
Conclusion: In this Tutorial we learned the following things below.
Create an java project
CobiGen to generate the Angular source code out of the java files

====